package com.gofind.gofind.domain;

import static org.assertj.core.api.Assertions.assertThat;

import com.gofind.gofind.domain.locations.Piece;

public class PieceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPieceAllPropertiesEquals(Piece expected, Piece actual) {
        assertPieceAutoGeneratedPropertiesEquals(expected, actual);
        assertPieceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPieceAllUpdatablePropertiesEquals(Piece expected, Piece actual) {
        assertPieceUpdatableFieldsEquals(expected, actual);
        assertPieceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPieceAutoGeneratedPropertiesEquals(Piece expected, Piece actual) {
        assertThat(expected)
            .as("Verify Piece auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPieceUpdatableFieldsEquals(Piece expected, Piece actual) {
        assertThat(expected)
            .as("Verify Piece relevant properties")
            .satisfies(e -> assertThat(e.getLibelle()).as("check libelle").isEqualTo(actual.getLibelle()))
            .satisfies(e -> assertThat(e.getImage()).as("check image").isEqualTo(actual.getImage()))
            .satisfies(e -> assertThat(e.getEtat()).as("check etat").isEqualTo(actual.getEtat()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPieceUpdatableRelationshipsEquals(Piece expected, Piece actual) {
        assertThat(expected)
            .as("Verify Piece relationships")
            .satisfies(e -> assertThat(e.getMaison()).as("check maison").isEqualTo(actual.getMaison()))
            .satisfies(e -> assertThat(e.getLocation()).as("check location").isEqualTo(actual.getLocation()));
    }
}
